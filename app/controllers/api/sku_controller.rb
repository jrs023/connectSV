class Api::SkuController < ApplicationController
  require 'json'
  def index   
    #SKUS
    #skus = "9781910307106,9781910307229,9781908762481,9781908762207,9781908317810,9780958184335,9781784980337,9781784980764,9781909559004,9781910307984,9781784980214,9781906334987,9781907377655,9781907377396,9781907377662,9781907377419,9781907377242,9781784981655,9781784981914,cecard,9781784980795,9781784981464,ceguidef1607ce_usgscliner,gsclivbox,gsclivbull,gsclivcard,9781909919280,9781909919273,9781909919266,gscmercybox,gscmercycard,gscoutbox,gscoutbull,gscoutcard,9781909919518,9781909919501,9781909919297,gscquickguide,gscworkbox,gscworkbull,gscworkcard,9781909919259,9781909919242,9781909919235,gscworshipbox,gscworshipbull,gscworshipcard
      
    skus = params[:skus]
    title = []
    onhand= []
    pending = []
    available = []
    incoming = []
    reorder = []
    previous_p = "";
    
	if skus.split(',').size() > 110
		total = skus.split(',').size()
		start_point = 0;
		end_point = 110;
		t = skus.split(',')
		while(start_point != end_point)
			temp = t[start_point..end_point]
			temp_skus = temp.join(",")
			
			gp_response = HTTParty.post("https://app.skuvault.com/api/products/getProducts", :query =>{:ProductSKUs => temp_skus,:UserToken => "rU+wISuzqhzmJI2y5A0I3QX6bdmBB4lXpqeQtDk1ukM=", :TenantToken => "lxe4jjI1279ozpNWB9gecweAFl12kU+gngKjmL1ZNCg=", :format => "json"})
			gp_response['Products'].each do |p|
				if(previous_p != p['Description'])
					title.append(p['Description'])  
					onhand.append(p['QuantityOnHand'])    		
					pending.append(p['QuantityPending'])		
					available.append(p['QuantityAvailable'])
					incoming.append(p['QuantityIncoming'])
					reorder.append(p['ReorderPoint'])
				end
				previous_p = p['Description']
			end
			start_point = end_point
			if(end_point + 110 > total)
				end_point = start_point + (total - end_point)+1
			else
				end_point = end_point+110
			end
			
			puts start_point.to_s + " " + end_point.to_s + " " + gp_response['Products'].size.to_s
		end
	else
		 gp_response = HTTParty.post("https://app.skuvault.com/api/products/getProducts", :query =>{:ProductSKUs => skus,:UserToken => "rU+wISuzqhzmJI2y5A0I3QX6bdmBB4lXpqeQtDk1ukM=", :TenantToken => "lxe4jjI1279ozpNWB9gecweAFl12kU+gngKjmL1ZNCg=", :format => "json"})
		#render json: JSON.pretty_generate(gp_response)
		gp_response['Products'].each do |p|
			if(previous_p != p['Description'])
				title.append(p['Description'])  
				onhand.append(p['QuantityOnHand'])    		
				pending.append(p['QuantityPending'])		
				available.append(p['QuantityAvailable'])
				incoming.append(p['QuantityIncoming'])
				reorder.append(p['ReorderPoint'])
			end
			previous_p = p['Description']
		end
	end		 
	    
	    
	my_object = { :title => title, :skus => skus.split(","), :onhand => onhand, :pending => pending, :available => available, :incoming => incoming, :reorder => reorder}
	render json: my_object.to_json, :callback => params[:callback]
  end
end
